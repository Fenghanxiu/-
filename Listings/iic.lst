C51 COMPILER V9.60.0.0   IIC                                                               04/04/2024 15:59:16 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE IIC
OBJECT MODULE PLACED IN .\Objects\iic.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE iic.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\iic.l
                    -st) OBJECT(.\Objects\iic.obj)

line level    source

   1          /*      #   I2C代码片段说明
   2                  1.      本文件夹中提供的驱动代码供参赛选手完成程序设计参考。
   3                  2.      参赛选手可以自行编写相关代码或以该代码为基础，根据所选单片机类型、运行速度和试题
   4                          中对单片机时钟频率的要求，进行代码调试和修改。
   5          */
   6          
   7          #include "iic.h"
   8          
   9          #define DELAY_TIME      5
  10          
  11          sbit scl = P2^0;
  12          sbit sda = P2^1;
  13          
  14          //
  15          static void I2C_Delay(unsigned char n)
  16          {
  17   1          do
  18   1          {
  19   2              _nop_();_nop_();_nop_();_nop_();_nop_();
  20   2              _nop_();_nop_();_nop_();_nop_();_nop_();
  21   2              _nop_();_nop_();_nop_();_nop_();_nop_();                
  22   2          }
  23   1          while(n--);         
  24   1      }
  25          
  26          //
  27          void I2CStart(void)
  28          {
  29   1          sda = 1;
  30   1          scl = 1;
  31   1              I2C_Delay(DELAY_TIME);
  32   1          sda = 0;
  33   1              I2C_Delay(DELAY_TIME);
  34   1          scl = 0;    
  35   1      }
  36          
  37          //
  38          void I2CStop(void)
  39          {
  40   1          sda = 0;
  41   1          scl = 1;
  42   1              I2C_Delay(DELAY_TIME);
  43   1          sda = 1;
  44   1              I2C_Delay(DELAY_TIME);
  45   1      }
  46          
  47          // 发送字节
  48          void I2CSendByte(unsigned char byt)
  49          {
  50   1          unsigned char i;
  51   1              
  52   1          for(i=0; i<8; i++){
  53   2              scl = 0;
  54   2                      I2C_Delay(DELAY_TIME);
C51 COMPILER V9.60.0.0   IIC                                                               04/04/2024 15:59:16 PAGE 2   

  55   2              if(byt & 0x80){
  56   3                  sda = 1;
  57   3              }
  58   2              else{
  59   3                  sda = 0;
  60   3              }
  61   2                      I2C_Delay(DELAY_TIME);
  62   2              scl = 1;
  63   2              byt <<= 1;
  64   2                      I2C_Delay(DELAY_TIME);
  65   2          }
  66   1              
  67   1          scl = 0;  
  68   1      }
  69          
  70          // 接收字节
  71          unsigned char I2CReceiveByte(void)
  72          {
  73   1              unsigned char da;
  74   1              unsigned char i;
  75   1              for(i=0;i<8;i++){   
  76   2                      scl = 1;
  77   2                      I2C_Delay(DELAY_TIME);
  78   2                      da <<= 1;
  79   2                      if(sda) 
  80   2                              da |= 0x01;
  81   2                      scl = 0;
  82   2                      I2C_Delay(DELAY_TIME);
  83   2              }
  84   1              return da;    
  85   1      }
  86          
  87          // 等待回应
  88          unsigned char I2CWaitAck(void)
  89          {
  90   1              unsigned char ackbit;
  91   1              
  92   1          scl = 1;
  93   1              I2C_Delay(DELAY_TIME);
  94   1          ackbit = sda; 
  95   1          scl = 0;
  96   1              I2C_Delay(DELAY_TIME);
  97   1              
  98   1              return ackbit;
  99   1      }
 100          
 101          // 发送回应
 102          void I2CSendAck(unsigned char ackbit)
 103          {
 104   1          scl = 0;
 105   1          sda = ackbit; 
 106   1              I2C_Delay(DELAY_TIME);
 107   1          scl = 1;
 108   1              I2C_Delay(DELAY_TIME);
 109   1          scl = 0; 
 110   1              sda = 1;
 111   1              I2C_Delay(DELAY_TIME);
 112   1      }
 113          
 114          /* ------------------at24c02----------------- */
 115          void e2prom_write(uint8_t addr, uint8_t *Data, uint8_t len)
 116          {
C51 COMPILER V9.60.0.0   IIC                                                               04/04/2024 15:59:16 PAGE 3   

 117   1              I2CStart();
 118   1              I2CSendByte(0xA0);
 119   1              I2CWaitAck();
 120   1              I2CSendByte(addr);
 121   1              I2CWaitAck();
 122   1              while(len--)
 123   1              {
 124   2                      I2CSendByte(*Data);
 125   2                      I2CWaitAck();
 126   2                      Data++;
 127   2              }
 128   1              I2CStop();
 129   1      }
 130          
 131          void e2prom_read(uint8_t addr, uint8_t *Data, uint8_t len)
 132          {
 133   1              I2CStart();
 134   1              I2CSendByte(0xA0);
 135   1              I2CWaitAck();
 136   1              I2CSendByte(addr);
 137   1              I2CWaitAck();
 138   1              
 139   1              I2CStart();
 140   1              I2CSendByte(0xA1);
 141   1              I2CWaitAck();
 142   1              
 143   1              loop:
 144   1              *Data = I2CReceiveByte();
 145   1              if (--len)
 146   1              {
 147   2                      I2CSendAck(0); //发送应答
 148   2                      Data++;
 149   2                      goto loop;
 150   2              }
 151   1              I2CSendAck(1); //发送非应答
 152   1              I2CStop();
 153   1      }
 154          
 155          /* ------------------pcf8591----------------- */
 156          uint8_t control_byte = 0x04;
 157          uint8_t dac_level = 0; //当前dac输出的等级，输出前先修改这个值再调用输出函数
 158          uint8_t adc_level[4] = { 0 };
 159          
 160          void dac_out(void)
 161          {
 162   1              control_byte |= 0x40; //开启dac输出
 163   1              
 164   1              I2CStart();
 165   1              I2CSendByte(0x90);
 166   1              I2CWaitAck();
 167   1              I2CSendByte(control_byte);
 168   1              I2CWaitAck();
 169   1              I2CSendByte(dac_level);
 170   1              I2CWaitAck();
 171   1              I2CStop();
 172   1      }
 173          
 174          void dac_stop(void)
 175          {
 176   1              control_byte &= ~0x40; //关闭dac输出
 177   1              
 178   1              I2CStart();
C51 COMPILER V9.60.0.0   IIC                                                               04/04/2024 15:59:16 PAGE 4   

 179   1              I2CSendByte(0x90);
 180   1              I2CWaitAck();
 181   1              I2CSendByte(control_byte);
 182   1              I2CWaitAck();
 183   1              I2CStop();
 184   1      }
 185          
 186          void adc_read(void)
 187          {
 188   1              I2CStart();
 189   1              I2CSendByte(0x90);
 190   1              I2CWaitAck();
 191   1              I2CSendByte(control_byte);
 192   1              I2CWaitAck();
 193   1              
 194   1              I2CStart();
 195   1              I2CSendByte(0x91);
 196   1              I2CWaitAck();
 197   1              
 198   1              I2CReceiveByte(); //第一次读取的数据不要使用
 199   1              I2CSendAck(0); //发送应答
 200   1              adc_level[0] = I2CReceiveByte();
 201   1              I2CSendAck(0); //发送应答
 202   1              adc_level[1] = I2CReceiveByte();
 203   1              I2CSendAck(0); //发送应答
 204   1              adc_level[2] = I2CReceiveByte();
 205   1              I2CSendAck(0); //发送应答
 206   1              adc_level[3] = I2CReceiveByte();
 207   1              I2CSendAck(1); //发送非应答
 208   1              I2CStop();
 209   1      }
 210          
 211          unsigned char read_pcf8591(unsigned char channle)
 212          {
 213   1              unsigned char buf;
 214   1              
 215   1              I2CStart();
 216   1              I2CSendByte(0x90);
 217   1              I2CWaitAck();
 218   1              I2CSendByte(channle | 0x40);
 219   1              I2CWaitAck();
 220   1              
 221   1              I2CStart();
 222   1              I2CSendByte(0x91);
 223   1              I2CWaitAck();
 224   1              I2CReceiveByte();
 225   1              I2CSendByte(0); //应答
 226   1              buf = I2CReceiveByte();
 227   1              I2CSendByte(1); //非应答
 228   1              I2CStop();
 229   1              
 230   1              return buf;
 231   1      }
 232          
 233          void write_pcf8591(unsigned char level)
 234          {
 235   1              I2CStart();
 236   1              I2CSendByte(0x90);
 237   1              I2CWaitAck();
 238   1              I2CSendByte(0x40);
 239   1              I2CWaitAck();
 240   1              I2CSendByte(level);
C51 COMPILER V9.60.0.0   IIC                                                               04/04/2024 15:59:16 PAGE 5   

 241   1              I2CWaitAck();
 242   1              I2CStop();
 243   1      }
 244          
 245          void stop_pcf8591(void)
 246          {
 247   1              
 248   1              I2CStart();
 249   1              I2CSendByte(0x90);
 250   1              I2CWaitAck();
 251   1              I2CSendByte(0x00);
 252   1              I2CWaitAck();
 253   1              I2CStop();
 254   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    495    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
